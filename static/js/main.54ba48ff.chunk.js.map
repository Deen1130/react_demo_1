{"version":3,"sources":["hooks/useWindowSize.js","Header.js","Nav.js","Footer.js","Layout.js","Post.js","Feed.js","Home.js","NewPost.js","PostPage.js","EditPost.js","About.js","Missing.js","hooks/useAxiosFetch.js","App.js","api/posts.js","store.js","index.js"],"names":["useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Header","title","className","Nav","posts","useStoreState","state","search","setSearch","useStoreActions","actions","setSearchResults","filteredResults","filter","post","body","toLowerCase","includes","reverse","onSubmit","e","preventDefault","htmlFor","id","type","placeholder","value","onChange","target","to","Footer","postCount","Layout","Post","datetime","length","slice","Feed","map","Home","isLoading","fetchError","searchResults","style","color","NewPost","navigate","useNavigate","postTitle","postBody","addPost","setPostTitle","setPostBody","Date","getTime","format","required","PostPage","useParams","getPostById","deletePost","onClick","handleDelete","EditPost","editTitle","editBody","editPost","setEditTitle","setEditBody","handleEdit","About","marginTop","Missing","useAxiosFetch","dataUrl","data","setData","setFetchError","setIsLoading","isMounted","source","axios","CancelToken","url","a","get","cancelToken","token","response","message","fetchData","cancel","App","setPosts","path","element","index","create","baseURL","createStore","action","payload","computed","find","toString","thunk","newPost","helpers","getState","api","console","log","delete","updatedPost","put","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"+KAkCeA,EA/BO,WAGpB,MAAoCC,mBAAS,CAC3CC,WAAOC,EACPC,YAAQD,IAFV,mBAAOE,EAAP,KAAmBC,EAAnB,KAyBA,OAnBAC,qBAAU,WAGR,IAAMC,EAAe,WACnBF,EAAc,CACZJ,MAAOO,OAAOC,WACdN,OAAQK,OAAOE,eAUnB,OANAH,IAGAC,OAAOG,iBAAiB,SAAUJ,GAG3B,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IAEIH,G,OCdMS,EAfA,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAGRb,EAAUF,IAAVE,MAER,OACE,yBAAQc,UAAU,SAAlB,UACE,6BAAKD,IACJb,EAAQ,IAAM,gDACXA,EAAQ,IAAM,gDACZ,oD,cCiCGe,EAzCH,WAGV,IAAMC,EAAQC,aAAc,SAACC,GAAD,OAAWA,EAAMF,SACvCG,EAASF,aAAc,SAACC,GAAD,OAAWA,EAAMC,UAGxCC,EAAYC,aAAgB,SAACC,GAAD,OAAaA,EAAQF,aACjDG,EAAmBF,aAAgB,SAACC,GAAD,OAAaA,EAAQC,oBAY9D,OATAlB,qBAAU,WAER,IAAMmB,EAAkBR,EAAMS,QAAO,SAACC,GAAD,OACjCA,EAAKC,KAAMC,cAAeC,SAASV,EAAOS,gBACvCF,EAAKb,MAAOe,cAAeC,SAASV,EAAOS,kBAElDL,EAAiBC,EAAgBM,aAChC,CAACd,EAAOG,EAAQI,IAGjB,sBAAKT,UAAU,MAAf,UACE,uBAAMA,UAAU,aAAaiB,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAAhD,UACE,uBAAOC,QAAQ,SAAf,0BACA,uBACEC,GAAG,SACHC,KAAK,OACLC,YAAY,eACZC,MAAOnB,EACPoB,SAAU,SAACP,GAAD,OAAOZ,EAAUY,EAAEQ,OAAOF,aAGxC,+BACE,6BAAI,cAAC,IAAD,CAAMG,GAAG,IAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,OAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,QAAT,4BCzBGC,EAZA,WAGb,IAAMC,EAAY1B,aAAc,SAACC,GAAD,OAAWA,EAAMyB,aAEjD,OACE,wBAAQ7B,UAAU,SAAlB,SACE,0CAAQ6B,EAAR,4B,OCOSC,EAXA,WACb,OACE,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,MAAM,mCACd,cAAC,EAAD,IACA,cAAC,IAAD,IACA,cAAC,EAAD,QCQSgC,EAjBF,SAAC,GAAc,IAAZnB,EAAW,EAAXA,KACd,OACE,0BAASZ,UAAU,OAAnB,UACE,eAAC,IAAD,CAAM2B,GAAE,eAAUf,EAAKS,IAAvB,UACE,6BAAKT,EAAKb,QACV,mBAAGC,UAAU,WAAb,SAAyBY,EAAKoB,cAEhC,mBAAGhC,UAAU,WAAb,SAEGY,EAAKC,KAAMoB,QAAU,GAClBrB,EAAKC,KADT,UAEQD,EAAKC,KAAMqB,MAAM,EAAG,IAF5B,aCCOC,EAVF,SAAC,GAAe,IAAbjC,EAAY,EAAZA,MACd,OACE,mCACGA,EAAMkC,KAAI,SAAAxB,GAAI,OACb,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKS,UCWTgB,EAdF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAGnBC,EAAgBrC,aAAc,SAACC,GAAD,OAAWA,EAAMoC,iBAErD,OACE,uBAAMxC,UAAU,OAAhB,UACGsC,GAAa,mBAAGtC,UAAU,YAAb,gDACZsC,GAAaC,GAAc,mBAAGvC,UAAU,YAAYyC,MAAO,CAAEC,MAAO,OAAzC,SAAmDH,KAC9ED,IAAcC,IAAeC,EAAcP,OAAS,cAAC,EAAD,CAAM/B,MAAOsC,IAAoB,mBAAGxC,UAAU,YAAb,mE,QC2C9E2C,EAnDC,WAGd,IAAMC,EAAWC,cAIXC,EAAY3C,aAAc,SAACC,GAAD,OAAWA,EAAM0C,aAC3CC,EAAW5C,aAAc,SAACC,GAAD,OAAWA,EAAM2C,YAG1CC,EAAUzC,aAAgB,SAACC,GAAD,OAAaA,EAAQwC,WAC/CC,EAAe1C,aAAgB,SAACC,GAAD,OAAaA,EAAQyC,gBACpDC,EAAc3C,aAAgB,SAACC,GAAD,OAAaA,EAAQ0C,eAazD,OACE,uBAAMlD,UAAU,UAAhB,UACE,0DACA,uBAAMA,UAAU,cAAciB,SAbb,SAACC,GACpBA,EAAEC,iBAEF,IAAME,GAAK,IAAI8B,MAAOC,UAChBpB,EAAWqB,YAAO,IAAIF,KAAQ,oBAEpCH,EADgB,CAAE3B,KAAItB,MAAO+C,EAAWd,WAAUnB,KAAMkC,IAExDH,EAAS,MAMP,UACE,uBAAOxB,QAAQ,YAAf,uCACA,uBACEC,GAAG,YACHC,KAAK,OACLgC,UAAQ,EACR9B,MAAOsB,EACPrB,SAAU,SAACP,GAAD,OAAO+B,EAAa/B,EAAEQ,OAAOF,UAEzC,uBAAOJ,QAAQ,WAAf,uCACA,0BACEC,GAAG,WACHiC,UAAQ,EACR9B,MAAOuB,EACPtB,SAAU,SAACP,GAAD,OAAOgC,EAAYhC,EAAEQ,OAAOF,UAExC,wBAAQF,KAAK,SAAb,iCCEOiC,EAhDE,WAGf,IAAMX,EAAWC,cAGTxB,EAAOmC,cAAPnC,GAIFT,EADcT,aAAc,SAACC,GAAD,OAAWA,EAAMqD,cACtCA,CAAYpC,GAGnBqC,EAAanD,aAAgB,SAACC,GAAD,OAAaA,EAAQkD,cAQxD,OACE,sBAAM1D,UAAU,WAAhB,SACE,0BAASA,UAAU,OAAnB,UACGY,GACC,qCACE,6BAAKA,EAAKb,QACV,mBAAGC,UAAU,WAAb,SAAyBY,EAAKoB,WAC9B,mBAAGhC,UAAU,WAAb,SAAyBY,EAAKC,OAC9B,cAAC,IAAD,CAAMc,GAAE,gBAAWf,EAAKS,IAAxB,SAA8B,wBAAQrB,UAAU,aAAlB,wCAC9B,wBAAQA,UAAU,eAAe2D,QAAS,kBAd/B,SAACtC,GACpBqC,EAAWrC,GACXuB,EAAS,KAY+CgB,CAAahD,EAAKS,KAAlE,0CAKFT,GACA,qCACE,gEACA,4BACE,cAAC,IAAD,CAAMe,GAAG,IAAT,iDCmCCkC,EAxEE,WAGf,IAAMjB,EAAWC,cAGTxB,EAAOmC,cAAPnC,GAGFyC,EAAY3D,aAAc,SAACC,GAAD,OAAWA,EAAM0D,aAC3CC,EAAW5D,aAAc,SAACC,GAAD,OAAWA,EAAM2D,YAE1CnD,EADcT,aAAc,SAACC,GAAD,OAAWA,EAAMqD,cACtCA,CAAYpC,GAGnB2C,EAAWzD,aAAgB,SAACC,GAAD,OAAaA,EAAQwD,YAChDC,EAAe1D,aAAgB,SAACC,GAAD,OAAaA,EAAQyD,gBACpDC,EAAc3D,aAAgB,SAACC,GAAD,OAAaA,EAAQ0D,eAGzD3E,qBAAU,WACJqB,IACFqD,EAAarD,EAAKb,OAClBmE,EAAYtD,EAAKC,SAElB,CAACD,EAAMqD,EAAcC,IAUxB,OACE,uBAAMlE,UAAU,UAAhB,UACG8D,GACC,qCACE,0DACA,uBAAM9D,UAAU,cAAciB,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAAjD,UACE,uBAAOC,QAAQ,YAAf,uCACA,uBACEC,GAAG,YACHC,KAAK,OACLgC,UAAQ,EACR9B,MAAOsC,EACPrC,SAAU,SAACP,GAAD,OAAO+C,EAAa/C,EAAEQ,OAAOF,UAEzC,uBAAOJ,QAAQ,WAAf,uCACA,0BACEC,GAAG,WACHiC,UAAQ,EACR9B,MAAOuC,EACPtC,SAAU,SAACP,GAAD,OAAOgD,EAAYhD,EAAEQ,OAAOF,UAExC,wBAAQF,KAAK,SAASqC,QAAS,kBA5BtB,SAACtC,GAClB,IAAMW,EAAWqB,YAAO,IAAIF,KAAQ,oBAEpCa,EADoB,CAAE3C,KAAItB,MAAO+D,EAAW9B,WAAUnB,KAAMkD,IAE5DnB,EAAS,SAAD,OAAUvB,IAwB2B8C,CAAWvD,EAAKS,KAArD,iCAIJyC,GACA,qCACE,gEACA,4BACE,cAAC,IAAD,CAAMnC,GAAG,IAAT,+CC5DGyC,EATD,WACZ,OACE,uBAAMpE,UAAU,QAAhB,UACE,uCACA,mBAAGyC,MAAO,CAAE4B,UAAW,QAAvB,2ICSSC,EAXC,WACd,OACE,uBAAMtE,UAAU,UAAhB,UACE,gEACA,4BACE,cAAC,IAAD,CAAM2B,GAAG,IAAT,4C,yCC6CO4C,EAhDO,SAACC,GAGrB,MAAwBvF,mBAAS,IAAjC,mBAAOwF,EAAP,KAAaC,EAAb,KACA,EAAoCzF,mBAAS,MAA7C,mBAAOsD,EAAP,KAAmBoC,EAAnB,KACA,EAAkC1F,oBAAS,GAA3C,mBAAOqD,EAAP,KAAkBsC,EAAlB,KAwCA,OArCArF,qBAAU,WACR,IAAIsF,GAAY,EACVC,EAASC,IAAMC,YAAYF,UAElB,uCAAG,WAAOG,GAAP,eAAAC,EAAA,6DAChBN,GAAa,GADG,kBAISG,IAAMI,IAAIF,EAAK,CACpCG,YAAaN,EAAOO,QALR,OAIRC,EAJQ,OAOVT,IACFH,EAAQY,EAASb,MACjBE,EAAc,OATF,gDAYVE,IACFF,EAAc,KAAIY,SAClBb,EAAQ,KAdI,yBAiBdG,GAAaD,GAAa,GAjBZ,4EAAH,sDAqBfY,CAAUhB,GASV,OANgB,WACdK,GAAY,EAEZC,EAAOW,YAIR,CAACjB,IAEG,CAAEC,OAAMlC,aAAYD,cC4BdoD,MAzCf,WAGE,IAAMC,EAAWpF,aAAgB,SAACC,GAAD,OAAaA,EAAQmF,YAEtD,EAAwCpB,EAAc,+BAA9CE,EAAR,EAAQA,KAAMlC,EAAd,EAAcA,WAAYD,EAA1B,EAA0BA,UAO1B,OAJA/C,qBAAU,WACRoG,EAASlB,KACR,CAACA,EAAMkB,IAGR,gCACE,sBAAK3F,UAAU,QAAf,UACE,+DACA,2KACA,oGAEF,qBAAKA,UAAU,WAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAO4F,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,CACpBvD,UAAWA,EACXC,WAAYA,MAEd,eAAC,IAAD,CAAOqD,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MAEtB,cAAC,IAAD,CAAOD,KAAK,MAAMC,QAAS,cAAC,EAAD,SAE7B,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,iB,gBClEtBd,MAAMgB,OAAO,CAC1BC,QAAS,0BCOIC,cAAY,CACzB/F,MAAO,GACPyF,SAAUO,aAAO,SAAC9F,EAAO+F,GACvB/F,EAAMF,MAAQiG,KAEhBrD,UAAW,GACXG,aAAciD,aAAO,SAAC9F,EAAO+F,GAC3B/F,EAAM0C,UAAYqD,KAEpBpD,SAAU,GACVG,YAAagD,aAAO,SAAC9F,EAAO+F,GAC1B/F,EAAM2C,SAAWoD,KAEnBrC,UAAW,GACXG,aAAciC,aAAO,SAAC9F,EAAO+F,GAC3B/F,EAAM0D,UAAYqC,KAEpBpC,SAAU,GACVG,YAAagC,aAAO,SAAC9F,EAAO+F,GAC1B/F,EAAM2D,SAAWoC,KAEnB9F,OAAQ,GACRC,UAAW4F,aAAO,SAAC9F,EAAO+F,GACxB/F,EAAMC,OAAS8F,KAEjB3D,cAAe,GACf/B,iBAAkByF,aAAO,SAAC9F,EAAO+F,GAC/B/F,EAAMoC,cAAgB2D,KAGxBtE,UAAWuE,aAAS,SAAChG,GAAD,OAAWA,EAAMF,MAAM+B,UAE3CwB,YAAa2C,aAAS,SAAChG,GAErB,OAAO,SAACiB,GAAD,OAAQjB,EAAMF,MAAMmG,MAAK,SAAAzF,GAAI,OAAKA,EAAKS,GAAIiF,aAAejF,SAGnE2B,QAASuD,YAAK,uCAAC,WAAO/F,EAASgG,EAASC,GAAzB,mBAAAvB,EAAA,+DACKuB,EAAQC,WAAlBxG,EADK,EACLA,MADK,kBAIYyG,EAAI/F,KAAK,SAAU4F,GAJ/B,OAILlB,EAJK,OAKX9E,EAAQmF,SAAR,sBAAqBzF,GAArB,CAA4BoF,EAASb,QACrCjE,EAAQyC,aAAa,IACrBzC,EAAQ0C,YAAY,IAPT,kDASX0D,QAAQC,IAAR,iBAAsB,KAAItB,UATf,0DAAD,2DAad7B,WAAY6C,YAAK,uCAAC,WAAO/F,EAASa,EAAIoF,GAApB,iBAAAvB,EAAA,+DACEuB,EAAQC,WAAlBxG,EADQ,EACRA,MADQ,kBAIRyG,EAAIG,OAAJ,iBAAqBzF,IAJb,OAKdb,EAAQmF,SAASzF,EAAMS,QAAO,SAAAC,GAAI,OAAIA,EAAKS,KAAOA,MALpC,gDAOduF,QAAQC,IAAR,iBAAsB,KAAItB,UAPZ,yDAAD,2DAWjBvB,SAAUuC,YAAK,uCAAC,WAAO/F,EAASuG,EAAaN,GAA7B,qBAAAvB,EAAA,+DACIuB,EAAQC,WAAlBxG,EADM,EACNA,MACAmB,EAAO0F,EAAP1F,GAFM,kBAKWsF,EAAIK,IAAJ,iBAAkB3F,GAAM0F,GALnC,OAKNzB,EALM,OAMZ9E,EAAQmF,SAASzF,EAAMkC,KAAI,SAAAxB,GAAI,OAAIA,EAAKS,KAAOA,EAAZ,eAAsBiE,EAASb,MAAS7D,MAC3EJ,EAAQyD,aAAa,IACrBzD,EAAQ0D,YAAY,IARR,kDAUZ0C,QAAQC,IAAR,iBAAsB,KAAItB,UAVd,0DAAD,6DC9DjB0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,MAAOA,EAAtB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOxB,KAAK,KAAKC,QAAS,cAAC,EAAD,cAKlCwB,SAASC,eAAe,W","file":"static/js/main.54ba48ff.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\n\n// 視窗大小\nconst useWindowSize = () => {\n\n  // 使用狀態\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  })\n\n  // 使用效應監聽\n  useEffect(() => {\n\n    // 調整大小\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth, // 獲取視窗內寬度\n        height: window.innerHeight // 獲取視窗內高度\n      })\n    }\n\n    handleResize()\n\n    // 視窗 添加事件監聽 調整大小\n    window.addEventListener(\"resize\", handleResize)\n\n    // 組件卸載前    \n    return () => window.removeEventListener(\"resize\", handleResize) // 移除事件監聽\n  }, [])\n\n  return windowSize\n}\n\nexport default useWindowSize\n","import useWindowSize from './hooks/useWindowSize'\n\nconst Header = ({ title }) => {\n\n  // 使用自定義 Hook\n  const { width } = useWindowSize()\n\n  return (\n    <header className=\"Header\">\n      <h1>{title}</h1>\n      {width < 768 ? <span>行動</span>\n        : width < 992 ? <span>平板</span>\n          : <span>桌機</span>}\n    </header>\n  )\n}\n\nexport default Header","import { Link } from 'react-router-dom'\nimport { useEffect } from 'react'\nimport { useStoreState, useStoreActions } from 'easy-peasy'\n\nconst Nav = () => {\n\n  // 使用狀態管理的狀態\n  const posts = useStoreState((state) => state.posts)\n  const search = useStoreState((state) => state.search)\n\n  // 使用狀態管理的動作\n  const setSearch = useStoreActions((actions) => actions.setSearch)\n  const setSearchResults = useStoreActions((actions) => actions.setSearchResults)\n\n  // 使用效應監聽\n  useEffect(() => {\n    // 數據篩選 標題與內容\n    const filteredResults = posts.filter((post) =>\n      ((post.body).toLowerCase()).includes(search.toLowerCase())\n      || ((post.title).toLowerCase()).includes(search.toLowerCase()))\n    // 設置搜尋結果狀態 數據反向排序\n    setSearchResults(filteredResults.reverse())\n  }, [posts, search, setSearchResults])\n\n  return (\n    <nav className=\"Nav\">\n      <form className=\"searchForm\" onSubmit={(e) => e.preventDefault()}>\n        <label htmlFor=\"search\">Search Posts</label>\n        <input\n          id=\"search\"\n          type=\"text\"\n          placeholder=\"Search Posts\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n      </form>\n      <ul>\n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"post\">Post</Link></li>\n        <li><Link to=\"about\">About</Link></li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Nav\n","import { useStoreState } from 'easy-peasy'\n\nconst Footer = () => {\n  \n  // 使用狀態管理的狀態\n  const postCount = useStoreState((state) => state.postCount)\n\n  return (\n    <footer className='Footer'>\n      <div>共 {postCount} 篇文章</div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import Header from './Header'\nimport Nav from './Nav'\nimport Footer from './Footer'\nimport { Outlet } from 'react-router-dom' // Outlet 插座，意思是在於頁首與頁尾之間的內容區塊\n\nconst Layout = () => {\n  return (\n    <div className=\"App\">\n      <Header title=\"阿貓部落格\" />\n      <Nav />\n      <Outlet />\n      <Footer />\n    </div>\n  )\n}\n\nexport default Layout\n","import { Link } from 'react-router-dom'\n\nconst Post = ({ post }) => {\n  return (\n    <article className=\"post\">\n      <Link to={`post/${post.id}`}>\n        <h2>{post.title}</h2>\n        <p className=\"postDate\">{post.datetime}</p>\n      </Link>\n      <p className=\"postBody\">{\n        // 限制字數\n        (post.body).length <= 25\n          ? post.body\n          : `${(post.body).slice(0, 25)}...`\n      }</p>\n    </article>\n  )\n}\n\nexport default Post\n","import Post from './Post'\n\nconst Feed = ({ posts }) => {\n  return (\n    <>\n      {posts.map(post => (\n        <Post key={post.id} post={post} />\n      ))}\n    </>\n  )\n}\n\nexport default Feed\n","import Feed from './Feed'\nimport { useStoreState } from 'easy-peasy'\n\nconst Home = ({ isLoading, fetchError }) => {\n\n  // 使用狀態管理的狀態\n  const searchResults = useStoreState((state) => state.searchResults)\n\n  return (\n    <main className=\"Home\">\n      {isLoading && <p className=\"statusMsg\">加載文章中...</p>}\n      {!isLoading && fetchError && <p className=\"statusMsg\" style={{ color: \"red\" }}>{fetchError}</p>}\n      {!isLoading && !fetchError && (searchResults.length ? <Feed posts={searchResults} /> : <p className=\"statusMsg\">沒有可顯示的文章</p>)}\n    </main>\n  )\n}\n\nexport default Home","import { useNavigate } from \"react-router-dom\"\nimport { format } from 'date-fns'\nimport { useStoreState, useStoreActions } from 'easy-peasy'\n\nconst NewPost = () => {\n\n  // 使用導航瀏覽歷史紀錄，進行跳頁\n  const navigate = useNavigate()\n\n  // 使用狀態管理的狀態\n  // const posts = useStoreState((state) => state.posts)\n  const postTitle = useStoreState((state) => state.postTitle)\n  const postBody = useStoreState((state) => state.postBody)\n\n  // 使用狀態管理的動作\n  const addPost = useStoreActions((actions) => actions.addPost)\n  const setPostTitle = useStoreActions((actions) => actions.setPostTitle)\n  const setPostBody = useStoreActions((actions) => actions.setPostBody)  \n\n  // 新增\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    // const id = posts.length ? posts[posts.length - 1].id + 1 : 1\n    const id = new Date().getTime()\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp')\n    const newPost = { id, title: postTitle, datetime, body: postBody }\n    addPost(newPost)\n    navigate('/') // 進行跳頁\n  }\n\n  return (\n    <main className=\"NewPost\">\n      <h2>新增文章</h2>\n      <form className=\"newPostForm\" onSubmit={handleSubmit}>\n        <label htmlFor=\"postTitle\">文章標題:</label>\n        <input\n          id=\"postTitle\"\n          type=\"text\"\n          required\n          value={postTitle}\n          onChange={(e) => setPostTitle(e.target.value)}\n        />\n        <label htmlFor=\"postBody\">文章內容:</label>\n        <textarea\n          id=\"postBody\"\n          required\n          value={postBody}\n          onChange={(e) => setPostBody(e.target.value)}\n        />\n        <button type=\"submit\">提交</button>\n      </form>\n    </main>\n  )\n}\n\nexport default NewPost\n","import { useParams, Link, useNavigate } from \"react-router-dom\"\nimport { useStoreState, useStoreActions } from 'easy-peasy'\n\nconst PostPage = () => {\n\n  // 使用導航瀏覽歷史紀錄，進行跳頁\n  const navigate = useNavigate()\n\n  // 使用參數\n  const { id } = useParams()\n\n  // 使用狀態管理的狀態\n  const getPostById = useStoreState((state) => state.getPostById)\n  const post = getPostById(id)\n\n  // 使用狀態管理的動作\n  const deletePost = useStoreActions((actions) => actions.deletePost)  \n\n  // 刪除\n  const handleDelete = (id) => {\n    deletePost(id)\n    navigate('/')\n  }\n\n  return (\n    <main className=\"PostPage\">\n      <article className=\"post\">\n        {post &&\n          <>\n            <h2>{post.title}</h2>\n            <p className=\"postDate\">{post.datetime}</p>\n            <p className=\"postBody\">{post.body}</p>\n            <Link to={`/edit/${post.id}`}><button className=\"editButton\">編輯文章</button></Link>\n            <button className=\"deleteButton\" onClick={() => handleDelete(post.id)}>\n              刪除文章\n            </button>\n          </>\n        }\n        {!post &&\n          <>\n            <h2>找不到文章</h2>\n            <p>\n              <Link to='/'>返回首頁</Link>\n            </p>\n          </>\n        }\n      </article>\n    </main>\n  )\n}\n\nexport default PostPage\n","import { useEffect } from \"react\"\nimport { useParams, Link, useNavigate } from \"react-router-dom\"\nimport { format } from 'date-fns'\nimport { useStoreState, useStoreActions } from 'easy-peasy'\n\nconst EditPost = () => {\n\n  // 使用導航瀏覽歷史紀錄，進行跳頁\n  const navigate = useNavigate()\n\n  // 使用參數\n  const { id } = useParams()\n\n  // 使用狀態管理的狀態\n  const editTitle = useStoreState((state) => state.editTitle)\n  const editBody = useStoreState((state) => state.editBody)\n  const getPostById = useStoreState((state) => state.getPostById)\n  const post = getPostById(id)\n\n  // 使用狀態管理的動作\n  const editPost = useStoreActions((actions) => actions.editPost)\n  const setEditTitle = useStoreActions((actions) => actions.setEditTitle)\n  const setEditBody = useStoreActions((actions) => actions.setEditBody)  \n\n  // 使用效應監聽\n  useEffect(() => {\n    if (post) {\n      setEditTitle(post.title)\n      setEditBody(post.body)\n    }\n  }, [post, setEditTitle, setEditBody])\n\n  // 編輯\n  const handleEdit = (id) => {\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp')\n    const updatedPost = { id, title: editTitle, datetime, body: editBody }\n    editPost(updatedPost)\n    navigate(`/post/${id}`)\n  }\n\n  return (\n    <main className=\"NewPost\">\n      {editTitle &&\n        <>\n          <h2>編輯文章</h2>\n          <form className=\"newPostForm\" onSubmit={(e) => e.preventDefault()}>\n            <label htmlFor=\"postTitle\">文章標題:</label>\n            <input\n              id=\"postTitle\"\n              type=\"text\"\n              required\n              value={editTitle}\n              onChange={(e) => setEditTitle(e.target.value)}\n            />\n            <label htmlFor=\"postBody\">文章內容:</label>\n            <textarea\n              id=\"postBody\"\n              required\n              value={editBody}\n              onChange={(e) => setEditBody(e.target.value)}\n            />\n            <button type=\"button\" onClick={() => handleEdit(post.id)}>提交</button>\n          </form>\n        </>\n      }\n      {!editTitle &&\n        <>\n          <h2>找不到文章</h2>\n          <p>\n            <Link to='/'>返回首頁</Link>\n          </p>\n        </>\n      }\n    </main>\n  )\n}\n\nexport default EditPost\n","const About = () => {\n  return (\n    <main className='About'>\n      <h2>About</h2>\n      <p style={{ marginTop: \"1rem\" }}>此博客應用程序是 Learn React 教程系列中的一個項目</p>\n    </main>\n  )\n}\n\nexport default About\n","import { Link } from 'react-router-dom'\n\nconst Missing = () => {\n  return (\n    <main className='Missing'>\n      <h2>網頁未找到</h2>\n      <p>\n        <Link to='/'>返回首頁</Link>\n      </p>\n    </main>\n  )\n}\n\nexport default Missing\n","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n// axios 請求\nconst useAxiosFetch = (dataUrl) => {\n  \n  // 使用狀態\n  const [data, setData] = useState([]) // 數據\n  const [fetchError, setFetchError] = useState(null) // 請求錯誤\n  const [isLoading, setIsLoading] = useState(false) // 加載中\n\n  // 使用效應監聽\n  useEffect(() => {\n    let isMounted = true // 使否已監聽\n    const source = axios.CancelToken.source() // 取消 Token 令牌來源\n\n    const fetchData = async (url) => {\n      setIsLoading(true)\n      try {\n        // get 獲取\n        const response = await axios.get(url, {\n          cancelToken: source.token\n        })\n        if (isMounted) {\n          setData(response.data)\n          setFetchError(null)\n        }\n      } catch (err) {\n        if (isMounted) {\n          setFetchError(err.message)\n          setData([])\n        }\n      } finally {\n        isMounted && setIsLoading(false)\n      }\n    }\n\n    fetchData(dataUrl)\n\n    // 清理\n    const cleanUp = () => {\n      isMounted = false\n      // 來源取消\n      source.cancel()\n    }\n\n    return cleanUp\n  }, [dataUrl])\n\n  return { data, fetchError, isLoading }\n}\n\nexport default useAxiosFetch","import Layout from './Layout'\nimport Home from './Home'\nimport NewPost from './NewPost'\nimport PostPage from './PostPage'\nimport EditPost from './EditPost'\nimport About from './About'\nimport Missing from './Missing'\n\nimport { Route, Routes } from 'react-router-dom'\nimport './index.css'\n\nimport { useEffect } from 'react'\nimport useAxiosFetch from './hooks/useAxiosFetch'\nimport { useStoreActions } from 'easy-peasy'\n\n/*\n自定義 Hook，可在 javaScript 函數中調用\n．命名必須要以 use 開頭，加上 export 分享給其它組件使用\n．不能用在迴圈、條件判斷或子函數中調用\n*/\n\n/*\nRouter v6 路由\nnpm i react-router-dom@6\n\ndate-fns 日期格式轉換\nnpm install date-fns --save\n\nJSON Server 服務器\nnpm install json-server -g\njson-server --port 3500 --watch data/db3.json\n\nEasy Peasy v5 十分簡單狀態管理\nnpm install easy-peasy\n*/\n\nfunction App () {\n\n  // 使用狀態管理的動作\n  const setPosts = useStoreActions((actions) => actions.setPosts)\n\n  const { data, fetchError, isLoading } = useAxiosFetch('http://localhost:3500/posts')\n\n  // 使用監聽效應\n  useEffect(() => {\n    setPosts(data)\n  }, [data, setPosts])\n\n  return (\n    <div>\n      <div className='title'>\n        <div>React Router v6 路由</div>\n        <div>axios 請求：get 獲取、post 發送 新增、put 放置 更新、delete 刪除</div>\n        <div>Easy Peasy v5 十分簡單狀態管理</div>\n      </div>\n      <div className='demo-box'>\n        <Routes>\n          <Route path=\"/\" element={<Layout />}>\n            <Route index element={<Home\n              isLoading={isLoading}\n              fetchError={fetchError}\n            />} />\n            <Route path=\"post\">\n              <Route index element={<NewPost />} />\n              {/* <Route path=\"/post/:id\" element={<PostPage />} /> */}\n              <Route path=\":id\" element={<PostPage />} />\n            </Route>\n            <Route path=\"/edit/:id\" element={<EditPost />} />\n            <Route path=\"about\" element={<About />} />\n            <Route path=\"*\" element={<Missing />} />\n          </Route>\n        </Routes>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import axios from 'axios'\n\n// axios 請求創建\nexport default axios.create({\n  baseURL: 'http://localhost:3500' // 基本網址\n})","import { createStore, action, thunk, computed } from \"easy-peasy\"\nimport api from './api/posts'\n\n/*\n．createStore({}) 創建狀態管理\n．action((state, payload) => {}) 動作 (當前狀態, 新狀態)\n．computed((state) => {}) 計算函數 (當前狀態)\n．thunk(async (actions, payload, helpers) => {}) 重擊；使用 async 異步支持 (異步 (動作, 新狀態, 小幫手))\n*/\n\n// 創建狀態管理\nexport default createStore({\n  posts: [], // 文章數據\n  setPosts: action((state, payload) => {\n    state.posts = payload\n  }),\n  postTitle: '', // 新增文章標題\n  setPostTitle: action((state, payload) => {\n    state.postTitle = payload\n  }),\n  postBody: '', // 新增文章內容\n  setPostBody: action((state, payload) => {\n    state.postBody = payload\n  }),\n  editTitle: '', // 編輯文章標題\n  setEditTitle: action((state, payload) => {\n    state.editTitle = payload\n  }),\n  editBody: '', // 編輯文章內容\n  setEditBody: action((state, payload) => {\n    state.editBody = payload\n  }),\n  search: '', // 搜尋字串\n  setSearch: action((state, payload) => {\n    state.search = payload\n  }),\n  searchResults: [], // 搜尋結果\n  setSearchResults: action((state, payload) => {\n    state.searchResults = payload\n  }),\n  // 文章數 計算函數\n  postCount: computed((state) => state.posts.length),\n  // 以 id 尋找文章 計算函數\n  getPostById: computed((state) => {\n    // 尋找，返回對象寫法\n    return (id) => state.posts.find(post => (post.id).toString() === id)\n  }),\n  // 新增文章\n  addPost: thunk(async (actions, newPost, helpers) => {\n    const { posts } = helpers.getState()\n    try {\n      // axios post 發送 新增\n      const response = await api.post('/posts', newPost)\n      actions.setPosts([...posts, response.data])\n      actions.setPostTitle('')\n      actions.setPostBody('')\n    } catch (err) {\n      console.log(`Error: ${err.message}`)\n    }\n  }),\n  // 刪除文章\n  deletePost: thunk(async (actions, id, helpers) => {\n    const { posts } = helpers.getState()\n    try {\n      // axios delete 刪除\n      await api.delete(`/posts/${id}`)\n      actions.setPosts(posts.filter(post => post.id !== id))\n    } catch (err) {\n      console.log(`Error: ${err.message}`)\n    }\n  }),\n  // 編輯文章\n  editPost: thunk(async (actions, updatedPost, helpers) => {\n    const { posts } = helpers.getState() // 助手 獲取狀態\n    const { id } = updatedPost\n    try {\n      // axios put 放置 更新\n      const response = await api.put(`/posts/${id}`, updatedPost)\n      actions.setPosts(posts.map(post => post.id === id ? { ...response.data } : post))\n      actions.setEditTitle('')\n      actions.setEditBody('')\n    } catch (err) {\n      console.log(`Error: ${err.message}`)\n    }\n  })\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\n\nimport store from './store'\nimport { StoreProvider } from 'easy-peasy' // Easy Peasy v5 十分簡單狀態管理\n\n// Router v6 版本\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <Router>\n        <Routes>\n          <Route path=\"/*\" element={<App />} />\n        </Routes>\n      </Router>\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}